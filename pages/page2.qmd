---
title: "Exploration des données *fruits et légumes*"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(ggplot2)
library(gtsummary)
library(plotly)
library(readr)
library(tidyr)

theme_set(theme_bw())
```


## Les données

Les données sont lues depuis le fichier tabulé `fruleg.tsv`.

```{r true data, echo = FALSE,  message = FALSE, warning = FALSE}
fruleg <- read_delim("../data/fruleg.tsv")
```

```{r data, echo = TRUE,  eval = FALSE}
fruleg <- read_delim("fruleg.tsv")
```

Les fruits et légumes sont répartis dans les sous-groupes suivants :

```{r table 1}
tbl_summary(
  fruleg %>% 
    select(groupe, ssgroupe), 
  by = "groupe")
```


## Valeur nutritionnelle

Pour étudier la valeur nutritionnelle des fruits et légumes sélectionnés, on se concentre sur les teneurs en protéines, lipides, glucides et sucres.

```{r nutrition}
nutrition <- fruleg %>%
    select(groupe, Proteines, 
           Lipides, Glucides, Sucres)
```

Il n'y a aucune valeur manquante dans ces données, la table suivante décrit les variables nutritionnelles en fonction des groupes (fruits et légumes).

```{r table nutrition}
tbl_summary(
  nutrition,
  by = "groupe")
```

On réprésente cette information sous la forme de boxplots combinés à des diagrammes en violon. On observe un grande variabilité de la teneur en sucres, ou en glucides. Le jeu de données "fruits et légumes" peut servir d'exemple pour illustrer les test de comparaison de deux groupes (non appariés), avec des procédures paramétriques ou non-paramétriques.

```{r boxplots nutrition}
nutrition %>%
  pivot_longer(-groupe) %>%
  ggplot(aes(name, value, color = groupe)) + 
  geom_violin(aes(fill = groupe), alpha = 0.5) +
  geom_boxplot(width = 0.2, position = position_dodge(width = 0.9)) +
  scale_y_log10()
```



## Teneur en minéraux

```{r mineraux}
mineraux <- fruleg %>%
    select(groupe,
           Calcium, Cuivre, Fer,
           Magnesium, Manganese, 
           Phosphore, Potassium,
           Zinc)
```

Il y a des données manquantes dans les colonnes concernant les minéraux, comme indiqué dans le tableau ci-dessous ("*Unknown*").

```{r table minéraux}
tbl_summary(
  mineraux,
  by = "groupe")
```

La teneur en potassium en fonction de la teneur en phosphate est représentée ci-dessous sous la forme d'un nuage de points.

```{r scatterplots, warning = FALSE}
gpp <- mineraux %>%
  ggplot(aes(Potassium, Phosphore, color = groupe)) + 
  geom_point() + 
  scale_x_log10() + 
  scale_y_log10() +
  stat_ellipse()

gmm <- mineraux %>%
  ggplot(aes(Magnesium, Manganese, color = groupe)) + 
  geom_point() + 
  scale_x_log10() + 
  scale_y_log10() +
  stat_ellipse()

ggpubr::ggarrange(
  gpp, gmm, common.legend = TRUE, legend = "bottom")
```


## Valeur énergétique

La valeur énergétique est une fonction linéaire de la composition nutritionnelle[^e]. Mais toutes les variables utilisées pour faire ce calcul ne sont pas disponibles pour tous les fruits et légumes de la table. Voici les résultats d'un modèle linéaire appris sur les aliments pour lesquels toutes les variables de la formule utilisée pour calculer la valeur énergétique sont disponible (i.e. sans aucune valeur manquante) : 

```{r energie formule, echo = FALSE}
tbl_regression(res.lm.tout <- lm(Energie ~ Lipides + Alcool + Proteines + Glucides + AcidesOrganiques + Polyols + Fibres, data = fruleg)) %>% add_glance_table(include = c(adj.r.squared))
```

Sans surprise, la valeur du $R^2$ est quasiment égale à 1. Mais le résultat est également très proche de 1 si on entraîne un modèle uniquement sur la base de la teneur en lipides, protéines et glucides (pour lesquels il n'y a aucune valeur manquante du tout).

```{r  energie formule reduite, echo = FALSE}
tbl_regression(res.lm.red <- lm(Energie ~ Lipides + Proteines + Glucides, data = fruleg)) %>% add_glance_table(include = c(adj.r.squared))
```

On peut donc estimer dans un premier temps les coefficients de ce modèle "réduit" sur les échantillons pour lesquels la valeur énergétique a pu être calculée, et approcher la valeur énergétique, en se basant uniquement sur les teneurs en protéines, lipides et glucides, pour les fruits et légumes pour lesquels la valeur énergétique est manquante.

Pour les données qui ne sont pas manquantes, on obtient la prédiction suivante (axe des $y$) en fonction de la valeur énergétique calculée avec la formule analytique.
La valeur énergétique est un peu surestimée pour les petites valeurs, mais ce n'est pas particulièrement gênant pour un jeu de données qui servira à un cours.


```{r prediction, echo = FALSE}
g.energie <- fruleg %>% 
  ggplot(aes(Energie, EnergiePredite, label = nom, color = groupe)) + 
  geom_abline(intercept = 0, slope = 1, color = "grey") +
  geom_point() + 
  coord_equal() + 
  labs(
    x = "Energie (kCal pur 100g)", 
    y = "Energie prédite par le modèle réduit") + 
  scale_x_log10() + 
  scale_y_log10()

ggplotly(g.energie, tooltip = "label")
```



[^e]: La documentation indique que la valeur énergétique est calculée en utilisant les coefficients suivants : 37 kJ/g (9 kcal/g) pour les lipides, 29 kJ/g (7 kcal/g) pour l'alcool (éthanol), 17 kJ/g (4 kcal/g) pour les protéines, 17 kJ/g (4 kcal/g) pour les glucides (à l'exception des polyols), 13 kJ/g (3 kcal/g) pour les acides organiques, 10 kJ/g (2,4 kcal/g) pour les polyols, 8 kJ/g (2 kcal/g) pour les fibres alimentaires."



```{r garbage, echo = FALSE, eval = FALSE}
GGally::ggpairs(
  nutrition,
  aes(color = groupe)
)

GGally::ggpairs(
  mineraux,
  aes(color = groupe)
)
```







